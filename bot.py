from ai_system import run_qa_system
from pdf_to_text import pdf2txt
from dotenv import load_dotenv
from separation_txt import go
import telebot
import asyncio
import os

load_dotenv()
TOKEN = os.getenv('TELEGRAM_TOKEN')
bot = telebot.TeleBot(TOKEN)

global flag
global text


@bot.message_handler(commands=['start'])
def send_start(message):
    global flag
    bot.send_message(
        message.chat.id, '–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ ü§ñ\nüìé –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –¥–ª—è –Ω–∞—á–∞–ª–∞ üìé')
    flag = False
    # global text


@bot.message_handler(commands=['stop'])
def send_end(message):
    global flag
    bot.send_message(
        message.chat.id, '–î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à—ë–ΩÔ∏è\nüìé –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è üìé')
    flag = False


@bot.message_handler(func=lambda _: True)
def msg_control(message):
    global flag
    global text

    if ('text' not in globals()) or (not flag):    # –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –ø—Ä–∏–Ω—è—Ç
        bot.delete_message(message.chat.id, message.message_id)

    else:
        # –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —á–∞–Ω–∫–∞–º–∏
        chunks_dir = 'output'
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        chunks = os.listdir(chunks_dir)
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏—Ö –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        chunks.sort()

        user_cntxt = ('–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å, –∏—Å–ø–æ–ª—å–∑—É—è —Ç–æ–ª—å–∫–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. '
                      '–û—Ç–≤–µ—Ç—å –Ω–∞ —Ç–æ–º –∂–µ —è–∑—ã–∫–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –∑–∞–¥–∞–Ω –≤–æ–ø—Ä–æ—Å.'
                      '–ï—Å–ª–∏ —Ç—ã –Ω–µ –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤ –∑–∞–¥–∞–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏, –Ω–∞–ø–∏—à–∏ –≤ –æ—Ç–≤–µ—Ç: '
                      '"–í–æ–ø—Ä–æ—Å –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç—É". –í–æ–ø—Ä–æ—Å:')

        responses = []
        for chunk in chunks:
            # –ß–∏—Ç–∞–µ–º –∫–∞–∂–¥—ã–π —á–∞–Ω–∫
            with open(os.path.join(chunks_dir, chunk), 'r') as file:
                text_chunk = file.read()
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É AI –Ω–∞ –∫–∞–∂–¥–æ–º —á–∞–Ω–∫–µ
            response = asyncio.run(run_qa_system(text_chunk, user_cntxt, message.text))
            responses.append(response)

        responses = set(responses)

        if len(responses) > 1:
            msg = ('–°–¥–µ–ª–∞–π –∏–∑ –≤—Å–µ—Ö –æ—Ç–≤–µ—Ç–æ–≤ –æ–¥–∏–Ω –æ–±—â–∏–π, –∫—Ä–∞—Å–∏–≤—ã–π, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç. –ò—Å–∫–ª—é—á–∏ –ø–æ–≤—Ç–æ—Ä—ã.'
                   '–û—Ç–≤–µ—Ç—å –Ω–∞ —Ç–æ–º –∂–µ —è–∑—ã–∫–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –∑–∞–¥–∞–Ω –≤–æ–ø—Ä–æ—Å.')
            user_new_cntxt = ''
            final_answer = asyncio.run(run_qa_system('\n'.join(responses), user_new_cntxt, msg))

            # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –æ—Ç–≤–µ—Ç—ã –≤ –æ–¥–∏–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            bot.send_message(message.chat.id, final_answer)
        else:
            final_answer = '–í–æ–ø—Ä–æ—Å –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç—É.'
            bot.send_message(message.chat.id, final_answer)


@bot.message_handler(content_types=['document'])
def handle_docs(message):
    try:
        chat_id = message.chat.id
        global flag
        global text

        if message.document.mime_type == 'application/pdf':
            file_info = bot.get_file(message.document.file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            bot.send_message(
                message.chat.id, '–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ª...')

            with open('input.pdf', 'wb') as file:
                file.write(downloaded_file)
            text = pdf2txt('input.pdf')

            with open('result.txt', 'w') as f:
                f.write(text)

            go('result.txt')

            doc = open('result.txt', 'rb')
            bot.send_document(chat_id, doc)
            bot.send_message(
                chat_id, '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω ‚úÖ\n–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –¥–∏–∞–ª–æ–≥—É üí¨')
            flag = True

        elif message.document.mime_type == 'text/plain':
            file_info = bot.get_file(message.document.file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            bot.send_message(
                message.chat.id, '–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ª...')
            text = downloaded_file.decode('utf-8')

            with open('result.txt', 'w') as f:
                f.write(text)
            go('result.txt')

            bot.send_message(
                chat_id, '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω ‚úÖ\n–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –¥–∏–∞–ª–æ–≥—É üí¨')
            flag = True

        else:
            bot.send_message(
                message.chat.id, '‚úñÔ∏è–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ .pdf –∏–ª–∏ .txt ‚úñÔ∏è')
            flag = False
            return

    except Exception as e:
        print(f"Caught exception: {type(e)}")
        print(f"Error message: {str(e)}")
        bot.reply_to(message, f'Ô∏è‚õî ERROR ‚õî')


bot.polling()
