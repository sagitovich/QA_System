from ai_system import run_qa_system
from pdf_to_text import pdf2txt
from dotenv import load_dotenv
import telebot
import asyncio
import os

load_dotenv()
TOKEN = os.getenv('TELEGRAM_TOKEN')
bot = telebot.TeleBot(TOKEN)

global flag
global text


@bot.message_handler(commands=['start'])
def send_start(message):
    global flag
    bot.send_message(
        message.chat.id, '–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ ü§ñ\nüìé –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –¥–ª—è –Ω–∞—á–∞–ª–∞ üìé')
    flag = False
    global text


@bot.message_handler(commands=['stop'])
def send_end(message):
    global flag
    bot.send_message(
        message.chat.id, '–î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à—ë–ΩÔ∏è\nüìé –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è üìé')
    flag = False


@bot.message_handler(func=lambda _: True)
def msg_control(message):
    global flag
    global text

    if ('text' not in globals()) or (not flag):    # –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –ø—Ä–∏–Ω—è—Ç
        bot.delete_message(message.chat.id, message.message_id)

    else:
        response = asyncio.run(run_qa_system(text, message.text))
        bot.send_message(message.chat.id, response)


@bot.message_handler(content_types=['document'])
def handle_docs(message):
    try:
        chat_id = message.chat.id
        global flag
        global text

        print('Text in work...')

        if message.document.mime_type == 'application/pdf':
            file_info = bot.get_file(message.document.file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            bot.send_message(
                message.chat.id, '–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ª...')

            with open('input.pdf', 'wb') as file:
                file.write(downloaded_file)
            text = pdf2txt('input.pdf')

            with open('result.txt', 'w') as f:
                f.write(text)

            doc = open('result.txt', 'rb')
            bot.send_document(chat_id, doc)
            bot.send_message(
                chat_id, '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω ‚úÖ\n–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –¥–∏–∞–ª–æ–≥—É üí¨')
            flag = True

        elif message.document.mime_type == 'text/plain':
            file_info = bot.get_file(message.document.file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            bot.send_message(
                message.chat.id, '–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ª...')
            text = downloaded_file.decode('utf-8')
            bot.send_message(
                chat_id, '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω ‚úÖ\n–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –¥–∏–∞–ª–æ–≥—É üí¨')
            flag = True

        else:
            bot.send_message(
                message.chat.id, '‚úñÔ∏è–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ .pdf –∏–ª–∏ .txt ‚úñÔ∏è')
            flag = False
            return

    except Exception as e:
        print(f"Caught exception: {type(e)}")
        print(f"Error message: {str(e)}")
        bot.reply_to(message, f"Ô∏è‚õî ERROR ‚õîÔ∏è")


bot.polling()
